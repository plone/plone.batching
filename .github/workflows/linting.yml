name: Linting
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:
    name: Lint code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8"]
        os: ["ubuntu-22.04"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - name: Install dependencies
        run: python -m pip install pyupgrade==3.3.1 black==22.12.0 isort==5.11.4 codespell==2.2.2 flake8==6.0.0
      # formatters
      - name: Run pyupgrade
        run: pyupgrade --py38-plus *.py `find plone -name "*.py"`
      - name: Run isort
        run: isort --check-only *.py `find plone -name "*.py"`
      - name: Run black
        run: black --check *.py `find plone -name "*.py"`
      # linters
      - name: Lint with codespell
        run: codespell *.rst `find plone -name "*.rst"` *.py `find plone -name "*.py"`
      - name: Lint with flake8
        run: flake8 *.py `find plone -name "*.py"`
